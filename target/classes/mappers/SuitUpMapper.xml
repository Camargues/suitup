<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SuitUpDAO">


	<!-- 카트 리스트 불러오기 -->
	<select id="getCartList" resultType="SuitUpCartVO" parameterType="SuitUpCartVO">
		SELECT * FROM SU_CART WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 주문하기 -->
	<insert id="insertOrder" parameterType="SuitUpOrderVO">
	
		INSERT INTO SU_ORDER VALUES(
		SU_ORDER_NUM_SEQ.NEXTVAL, #{memId}, ${proNum}, #{dtproSize},#{dtproColor},${orderCount},'주문완료',SYSDATE,
		#{orderAddress}, #{orderReceiver}, #{orderPhone}, #{orderMemo}, ${proPrice}, #{proName}
		)

	</insert>

	<!-- 카트 전부 삭제 -->
	<delete id="deleteCartList" parameterType="SuitUpCartVO">
		DELETE FROM SU_CART WHERE MEM_ID = #{memId}
	</delete>
	
	<!-- 카트 한품목 삭제 -->
	<delete id="deleteCart" parameterType="String">
		DELETE FROM SU_CART WHERE CART_NUM = #{cart_num}
	</delete>
	
	<!-- 주문 목록 불러오기 -->
	<select id="orderList" parameterType="SuitUpOrderVO" resultType="SuitUpOrderVO">
		SELECT * FROM SU_ORDER WHERE MEM_ID = #{memId}
	</select>
	
	<!-- 회원 가입 -->
	<insert parameterType="SuitUpCustomerVO" id="userInsert">
	INSERT INTO SU_MEM(MEM_ID,mem_admin,MEM_PASS,MEM_NAME,MEM_ADDR,MEM_PHONE)
	values(#{memId},0,#{memPass},#{memName},#{memAddr},#{memPhone})
	</insert>
	
	<!-- 아이디 중복 체크 -->
	<select id="idCheck" resultType="SuitUpCustomerVO" parameterType="SuitUpCustomerVO">
		SELECT * FROM SU_MEM WHERE MEM_ID = #{memId} 
		<if test="memPass != null">
		AND MEM_PASS=#{memPass}
		</if>
	</select>
	
	<!-- 카테고리 목록 불러오기 -->
	<select id="getCategoryList" resultType="SuitUpCategoryVO">
		SELECT * FROM SU_CATE
	</select>
	
	<!-- 상품목록 불러오기 -->
	<select id="getProductList" parameterType="SuitUpProductVO" resultType="SuitUpProductVO">
		SELECT * FROM SU_PRO
		<where>
			<if test="cateNum != null">AND CATE_NUM = #{cateNum}</if>
			<!-- <if test="cateDtnum != null">AND CATE_DTNUM = ${cateDtnum}</if> -->
		</where>
	</select>
	
	<!-- 인기상품 불러오기 -->
	<select id="getPopularList" parameterType="SuitUpProductVO" resultType="SuitUpProductVO">
	<![CDATA[
		SELECT SU_PRO.*
		FROM SU_PRO, (SELECT PRO_NUM
			FROM(SELECT ROWNUM, PRO_NUM 
				FROM(SELECT ROW_NUMBER() OVER(ORDER BY SUM(ORDER_COUNT) DESC) AS NUM, PRO_NUM, SUM(ORDER_COUNT)AS SUM
					FROM SU_ORDER
					WHERE CATE_NUM = #{cateNum}
					GROUP BY PRO_NUM ORDER BY SUM DESC) WHERE ROWNUM <= 10)) A
		WHERE SU_PRO.PRO_NUM = A.PRO_NUM
			]]>
	</select>
	
	<!-- 신제품 불러오기 -->
	<select id="getNewList" resultType="SuitUpProductVO">
	<![CDATA[
		SELECT SU_PRO.*
		FROM SU_PRO, (SELECT ROWNUM, SU_PRO.* FROM SU_PRO WHERE ROWNUM <= 5 ORDER BY PRO_NUM DESC) A
		WHERE A.PRO_NUM = SU_PRO.PRO_NUM
	]]>
	</select>
	
	<!-- 관리자 상품 등록하기 -->
	<insert id="Productinsert"  parameterType="SuitUpProductVO" >
	    
	       insert into SU_PRO 
	       (PRO_NUM,PRO_NAME,PRO_PRICE,PRO_DETAIL,CATE_NUM,CATE_DTNUM,DTPRO_COUNT)
	    
	       values 
	       ( SEQ_SU_PRO.NEXTVAL,#{proName},#{proPrice},#{proDetail},#{cateNum},#{cateDtnum},#{dtproCount})
	
	</insert>
	
	<!--  관리자 상품목록 불러오기 -->
	<select id="getAdminList" parameterType="SuitUpProductVO" resultType="SuitUpProductVO">
		SELECT * FROM SU_PRO
	</select>
	
	<!-- 회원정보 수정 -->
	<update parameterType="SuitUpCustomerVO" id="memberModify">
	UPDATE su_mem SET mem_name = #{memName},mem_addr=#{memAddr},mem_phone=#{memPhone} WHERE mem_id = #{memId}
	</update>
	
	<!-- 상품 상세 페이지 불러오기 -->
	<select id="getProductDetails" parameterType="SuitUpProductVO" resultType="SuitUpProductVO">
		SELECT * FROM SU_PRO WHERE PRO_NUM=#{proNum}
	</select>
	
	<!-- 상품 장바구니 담기 -->
	<insert id="insertCart" parameterType="SuitUpCartVO">
	INSERT INTO SU_CART VALUES(#{proNum}, #{proName},#{memId},#{dtproSize}, #{dtproColor},#{cartCount}, #{proPrice}, CART_NUM_SEQUENCE.NEXTVAL)
	</insert>
	
	<!-- 상품 수정 -->
	<update id="updateProduct" parameterType="SuitUpProductVO">
	UPDATE SU_PRO
	<set>
	<if test="dtproCount != null">
	DTPRO_COUNT = DTPRO_COUNT - #{dtproCount}
	</if>
	</set>
	<where>
	<if test="#{proNum} != null">
	PRO_NUM = #{proNum}
	</if>
	</where>
	</update>
	
	<!-- 리뷰 불러오기 -->
	<select id="getCommentList" parameterType="SuitUpCommentVO" resultType="SuitUpCommentVO">
		SELECT * FROM SU_COMMENT WHERE PRO_NUM = #{proNum}
	</select>
	<!-- 리뷰  작성 -->
	<insert id="insertComment" parameterType="SuitUpCommentVO">
		INSERT INTO SU_COMMENT VALUES (#{proNum}, #{memId}, #{comTitle}, #{comContent}, SYSDATE, 0,#{comAvg} ,COMMENT_NUM_SEQ.NEXTVAL)
	</insert>
	<!-- 리뷰 삭제 -->
	<delete id="deleteComment" parameterType="SuitUpCommentVO">
		DELETE FROM SU_COMMENT WHERE COM_SEQ = #{comSeq}
	</delete>
	<!-- 리뷰 수정 -->
	<update id="updateComment" parameterType="SuitUpCommentVO">
		UPDATE SU_COMMENT
		SET COM_TITLE = #{comTitle},
			COM_CONTENT = #{comContent},
			COM_AVG = #{comAvg}
		WHERE COM_SEQ = #{comSeq}
	</update>
	
	<!-- 리뷰 평점 가져오기 -->
	<select id="getReviewAvg" parameterType="SuitUpCommentVO" resultType="long">
	SELECT AVG(COM_AVG) FROM SU_COMMENT WHERE PRO_NUM = #{proNum}
	</select>
	
	<!-- 리뷰 갯수 가져오기 -->
	<select id="getReviewCount" parameterType="SuitUpCommentVO" resultType="int">
	SELECT COUNT(COM_AVG) FROM SU_COMMENT WHERE PRO_NUM = #{proNum}
	</select>
	
	<!-- 리뷰 하나 불러오기 -->
	<select id="getComment" parameterType="SuitUpCommentVO" resultType="SuitUpCommentVO">
		SELECT * FROM SU_COMMENT WHERE COM_SEQ = #{comSeq}
	</select>
	
</mapper>